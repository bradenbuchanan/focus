/* src/app/components/dashboard/priorityFocus.module.css */
.priorityContainer {
    background-color: var(--background);
    border-radius: 1rem;
    padding: 1.5rem;
    margin-bottom: 2rem;
    box-shadow: 0 2px 8px var(--gray-alpha-100);
    border: 1px solid var(--gray-alpha-200);
  }
  
  .priorityTitle {
    font-size: 1.3rem;
    margin-bottom: 1.25rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .priorityTitle::before {
    content: "âš¡"; /* Lightning bolt icon to represent priority */
    font-size: 1.1rem;
  }
  
  .section {
    margin-bottom: 1.5rem;
  }
  
  .section:last-child {
    margin-bottom: 0;
  }
  
  .sectionTitle {
    font-size: 1rem;
    font-weight: 500;
    margin-bottom: 0.75rem;
    color: var(--foreground);
    opacity: 0.8;
  }
  
  .priorityList {
    list-style: none;
  }
  
  .priorityItem {
    display: flex;
    align-items: center;
    padding: 0.75rem;
    border-radius: 0.5rem;
    background-color: var(--gray-alpha-100);
    margin-bottom: 0.75rem;
    gap: 0.75rem;
  }
  
  .priorityBadge {
    background-color: #e53935;
    color: white;
    font-size: 0.75rem;
    padding: 0.2rem 0.5rem;
    border-radius: 0.75rem;
    font-weight: 500;
    flex-shrink: 0;
  }
  
  .priorityText {
    flex: 1;
    font-weight: 500;
  }
  
  .progressText {
    font-size: 0.85rem;
    opacity: 0.7;
    flex-shrink: 0;
  }
  
  .activityTag {
    background-color: var(--gray-alpha-200);
    padding: 0.2rem 0.5rem;
    border-radius: 0.75rem;
    font-size: 0.75rem;
    opacity: 0.8;
    flex-shrink: 0;
  }
  
  /* Goal item styling with clear visual hierarchy */
  .goalItem {
    padding: 0.75rem;
    border-radius: 0.5rem;
    background-color: var(--gray-alpha-100);
    margin-bottom: 0.75rem;
  }
  
  .goalHeader {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid rgba(var(--gray-rgb), 0.1);
    margin-bottom: 0.5rem;
  }
  
  .goalProgress {
    width: 3rem;
    height: 0.5rem;
    background-color: rgba(var(--gray-rgb), 0.2);
    border-radius: 1rem;
    overflow: hidden;
    flex-shrink: 0;
  }
  
  .progressBar {
    height: 100%;
    background-color: #3B82F6;
    border-radius: 1rem;
  }
  
  /* Goal tasks styling - more distinctive and noticeable */
  .goalTasks {
    list-style: none;
    margin-top: 0.5rem;
    padding: 0.5rem;
    background-color: rgba(var(--gray-rgb), 0.05);
    border-radius: 0.5rem;
  }
  
  .goalTask {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem;
    margin-bottom: 0.25rem;
    border-radius: 0.25rem;
    background-color: var(--background);
  }
  
  .goalTask:last-child {
    margin-bottom: 0;
  }
  
  .taskPriority {
    background-color: #e53935;
    color: white;
    font-size: 0.7rem;
    padding: 0.1rem 0.4rem;
    border-radius: 0.5rem;
    font-weight: 500;
    flex-shrink: 0;
  }
  
  .taskText {
    font-size: 0.9rem;
  }
  
  .noTasks {
    font-size: 0.85rem;
    font-style: italic;
    opacity: 0.7;
    text-align: center;
    padding: 0.5rem;
  }
  
  .viewAllLink {
    display: block;
    text-align: right;
    font-size: 0.85rem;
    color: #3B82F6;
    margin-top: 0.5rem;
    font-weight: 500;
  }
  
  .viewAllLink:hover {
    text-decoration: underline;
  }
  
  .taskCheckbox {
    margin-right: 0.5rem;
    display: flex;
    align-items: center;
  }
  
  .taskCheckbox input {
    width: 16px;
    height: 16px;
    cursor: pointer;
  }
  
  /* For goal tasks */
  .goalTask {
    display: flex;
    align-items: center;
    padding: 0.5rem;
    margin-bottom: 0.25rem;
    border-radius: 0.25rem;
    background-color: var(--background);
    transition: opacity 0.3s ease;
  }
  
  .goalTask .taskCheckbox {
    margin-right: 0.5rem;
  }
  
  /* For priority items */
  .priorityItem {
    display: flex;
    align-items: center;
    padding: 0.75rem;
    border-radius: 0.5rem;
    background-color: var(--gray-alpha-100);
    margin-bottom: 0.75rem;
    gap: 0.5rem;
    transition: opacity 0.3s ease;
  }
  
  /* Completing state styles */
  .priorityItem.completing,
  .goalTask.completing {
    opacity: 0.5;
  }
  
  /* Completed task animation */
  @keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; height: 0; padding: 0; margin: 0; overflow: hidden; }
  }
  
  .completed {
    animation: fadeOut 0.5s forwards;
  }

  @media (max-width: 768px) {
    .priorityContainer {
      padding: 1.25rem;
    }
  
    .priorityTitle {
      font-size: 1.2rem;
    }
    
    .goalHeader {
      flex-wrap: wrap;
    }
    
    .goalProgress {
      width: 2.5rem;
    }
  }
